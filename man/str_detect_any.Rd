% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/string.R
\name{str_detect_any}
\alias{str_detect_any}
\title{Detect presence or absence of \emph{any} pattern in string.}
\usage{
str_detect_any(string, pattern, negate = FALSE)
}
\arguments{
\item{string}{Input vector.}

\item{pattern}{Pattern to look for (see [\code{\link[stringr:str_detect]{stringr::str_detect()}}])}

\item{negate}{If TRUE, return non-matching elements.}
}
\value{
A logical vector.
}
\description{
This function is very similar to [\code{\link[stringr:str_detect]{stringr::str_detect()}}] except it
can be vectorized over both string and pattern at the same time.
}
\details{
The functions [\code{\link[stringr:str_detect]{stringr::str_detect()}}] and [\link[stringi:stri_detect]{stringi::stri_detect}] are
excellent functions for identifying
matches with patterns. However, there are edge cases where it would be great to match
a set of patterns against a table of strings. In this case, detect doesn't quite work.

This function provides the ability to determine if any of the patterns (summarized)
matches any of the strings. It returns a vector (of length of the string vector) of
logicals indicating if any of the patterns are matched for each element of the string
vector.
}
\examples{
\dontrun{
fruit <- c("apple","banana","pear","pineapple")
pattern <- c("a","^a","a$","b","[aeiou]")

stringr::str_detect(fruit, pattern[1])

str_detect_any(fruit, pattern[1])

str_detect_any(fruit, pattern[2:4])
}
}
